using System.Collections.Generic;
using System.IO;
using System.Linq;
using Facility.Definition.Swagger;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using NUnit.Framework;
using Shouldly;

namespace Facility.Definition.UnitTests.Swagger
{
	[TestFixture]
	public class SimpleSwaggerTests
	{
		[Test]
		public void GenerateSimpleServiceJson()
		{
			var generator = new SwaggerGenerator { GeneratorName = "tests" };
			var namedText = generator.GenerateOutput(TestUtility.ParseTestApi(s_fsdText)).NamedTexts.Single();
			namedText.Name.ShouldBe("swagger.json");
			var jToken = JToken.Parse(namedText.Text);
			var jTokenExpected = JToken.FromObject(s_swaggerService, JsonSerializer.Create(SwaggerUtility.JsonSerializerSettings));
			JToken.DeepEquals(jToken, jTokenExpected).ShouldBe(true);
		}

		[Test]
		public void GenerateSimpleServiceYaml()
		{
			var generator = new SwaggerGenerator { Yaml = true, GeneratorName = "tests" };
			var namedText = generator.GenerateOutput(TestUtility.ParseTestApi(s_fsdText)).NamedTexts.Single();
			namedText.Name.ShouldBe("swagger.yaml");
			var jToken = JToken.FromObject(new YamlDotNet.Serialization.DeserializerBuilder().Build().Deserialize(new StringReader(namedText.Text)));
			var jTokenExpected = JToken.FromObject(s_swaggerService, JsonSerializer.Create(SwaggerUtility.JsonSerializerSettings));
			JToken.DeepEquals(jToken, jTokenExpected).ShouldBe(true);
		}

		readonly string s_fsdText = @"
			service TestApi
			{
				method do
				{
				}:
				{
				}
			}";

		readonly SwaggerService s_swaggerService = new SwaggerService
		{
			Swagger = "2.0",
			Info = new SwaggerInfo
			{
				Title = "TestApi",
				Version = "0.0.0",
				CodeGen = "DO NOT EDIT: generated by tests",
			},
			Paths = new Dictionary<string, SwaggerOperations>
			{
				["/do"] = new SwaggerOperations
				{
					Post = new SwaggerOperation
					{
						OperationId = "do",
						Parameters = new SwaggerSchema[0],
						Responses = new Dictionary<string, SwaggerResponse>
						{
							["204"] = new SwaggerResponse
							{
								Description = "Success.",
							}
						}
					}
				}
			}
		};
	}
}
