swagger: '2.0'
info:
  title: Twitter REST API
  version: '1.1'
  x-identifier: TwitterRestApi
  x-codegen: 'DO NOT EDIT: generated by fsdgenfsd'
host: api.twitter.com
basePath: /1.1
schemes:
- https
paths:
  /statuses/mentions_timeline:
    get:
      description: Returns the 20 most recent mentions for the authenticating user
      operationId: getStatusesMentionsTimeline
      produces:
      - application/json
      parameters:
      - in: query
        name: count
        description: Specifies the number of tweets to try and retrieve
        type: string
      - in: query
        name: since_id
        description: Returns result with an ID greater than the specified ID
        type: string
      - in: query
        name: max_id
        description: Returns results with an ID less than or equal to the specified ID
        type: string
      - in: query
        name: trim_user
        description: When set to either true, t or 1, each tweet returned in a timeline will include a user object
        type: string
      - in: query
        name: contributor_details
        description: This parameter enhances the contributors element of the status response
        type: string
      - in: query
        name: include_entities
        description: The entities node will be disincluded when set to false
        type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Tweets'
          x-identifier: ok
  /statuses/user_timeline:
    get:
      description: Returns a collection of the most recent Tweets posted by the User
      operationId: getStatusesUserTimeline
      produces:
      - application/json
      parameters:
      - in: query
        name: count
        description: Specifies the number of tweets to try and retrieve
        type: string
      - in: query
        name: since_id
        description: Returns result with an ID greater than the specified ID
        type: string
      - in: query
        name: max_id
        description: Returns results with an ID less than or equal to the specified ID
        type: string
      - in: query
        name: trim_user
        description: When set to either true, t or 1, each tweet returned in a timeline will include a user object
        type: string
      - in: query
        name: exclude_replies
        description: This paramters will prevent from appearing in the returned timeline
        type: boolean
      - in: query
        name: contributor_details
        description: This paramters enhances the contributors element of the status response to include the screen_name of the contributor
        type: boolean
      - in: query
        name: include_rts
        description: When set to false, the timeline will strip any native retweet
        type: boolean
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Tweets'
          x-identifier: ok
  /statuses/home_timeline:
    get:
      description: Returns a collection of the most recent Tweets
      operationId: getStatusesHomeTimeline
      produces:
      - application/json
      parameters:
      - in: query
        name: since_id
        description: Returns result with an ID greater than the specified ID
        type: string
      - in: query
        name: max_id
        description: Returns results with an ID less than or equal to the specified ID
        type: string
      - in: query
        name: trim_user
        description: When set to either true, t or 1, each tweet returned in a timeline will include a user object
        type: string
      - in: query
        name: exclude_replies
        description: This paramters will prevent from appearing in the returned timeline
        type: boolean
      - in: query
        name: contributor_details
        description: This paramters enhances the contributors element of the status response to include the screen_name of the contributor
        type: boolean
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Tweets'
          x-identifier: ok
  /statuses/retweets/{id}:
    post:
      description: Retweens a tweet
      operationId: postStatusesRetweetsId
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        description: The numerical ID of the desired status
        required: true
        type: string
      - in: query
        name: trim_user
        description: When set to either true, t or 1, each tweet returned in a timeline will include a user object
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Tweets'
          x-identifier: tweets
  /statuses/show/{id}:
    get:
      description: Retruns a single Tweet
      operationId: getStatusesShowId
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        description: The numerical ID of the desired status
        required: true
        type: string
      - in: query
        name: trim_user
        description: When set to either true, t or 1, each tweet returned in a timeline will include a user object
        type: string
      - in: query
        name: include_my_retweet
        description: When set to either true, t or 1, any Tweets returned that have been retweeted by the authenticating
        type: string
      - in: query
        name: include_entities
        description: The entities node will be disincluded when set to false
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Tweets'
          x-identifier: tweets
  /statuses/destroy/{id}:
    post:
      description: Destroys the status specified by the required ID parameter
      operationId: postStatusesDestroyId
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        description: The numerical ID of the desired status
        required: true
        type: string
      - in: query
        name: trim_user
        description: When set to either true, t or 1, each tweet returned in a timeline will include a user object
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Tweets'
          x-identifier: tweets
  /statuses/update:
    post:
      description: Updates the authenticating user's status
      operationId: postStatusesUpdate
      produces:
      - application/json
      parameters:
      - in: query
        name: status
        description: The text of your status update
        type: string
      - in: query
        name: in_reply_to_status_id
        description: The ID of an existing status
        type: string
      - in: query
        name: lat
        description: The latitude of the location
        type: string
      - in: query
        name: long
        description: The longitude of the location
        type: string
      - in: query
        name: place_id
        description: A place in the world
        type: string
      - in: query
        name: display_coordinates
        description: Whether or not to put a pin on the exact coordinates a tweet
        type: string
      - in: query
        name: trim_user
        description: When set to either true, t or 1, each tweet returned in a timeline will include a user object
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Tweets'
          x-identifier: tweets
  /statuses/oembed:
    get:
      description: Returns information allowing the creation of an embedded representation
      operationId: getStatusesOembed
      produces:
      - application/json
      parameters:
      - in: query
        name: id
        description: The tweet/status id to return embed code for
        type: string
      - in: query
        name: url
        description: The encoded URL of the Tweet status to be embedded
        type: string
      - in: query
        name: maxwidth
        description: The maximum width in pixels that the embed should be rendered at
        type: string
      - in: query
        name: hide_media
        description: Specifies whether the embedded tweet should automatically show the original message in the case that the embedded Tweet is a reply
        type: string
      - in: query
        name: hide_thread
        description: Specifies whether the embedded Tweet html should include a 'script' element pointing to widgets.js
        type: string
      - in: query
        name: align
        description: Specifies whether the embedded Tweet should be left aligned
        type: string
      - in: query
        name: related
        description: A value for the TWT related parameters
        type: string
      - in: query
        name: lang
        description: Languages code for the rendered embed
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Tweets'
          x-identifier: tweets
  /lists/list:
    get:
      description: Return all lists the authenticating or specified user subscribes to, including their own.
      operationId: getListsList
      produces:
      - application/json
      parameters:
      - in: query
        name: screen_name
        description: The screen name of the user for whom to return results for
        type: string
      - in: query
        name: user_id
        description: The ID of the user for whom to return results for
        type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Lists'
          x-identifier: ok
  /lists/statuses:
    get:
      description: Returns a timeline of tweets authored by memebers of the specified list
      operationId: getListsStatuses
      produces:
      - application/json
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list by its slug instead of its numerical id
        type: string
      - in: query
        name: owner_screen_name
        description: The screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: owner_id
        description: The user ID of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: since_id
        description: Returns results with an ID greater than the sepcified ID
        type: string
      - in: query
        name: max_id
        description: Returns results with an ID less than or equal to the specified ID
        type: string
      - in: query
        name: count
        description: Specifies the number of results to retrieve per page
        type: string
      - in: query
        name: include_entities
        description: Entities are ON by default
        type: string
      - in: query
        name: include_rts
        description: When set to either true, t or 1, the list timeline will contain native retweets in addition to the standard stream of tweets
        type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Tweets'
          x-identifier: ok
  /lists/members/destroy:
    get:
      description: Returns the list of memebers destroy
      operationId: getListsMembersDestroy
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list by its slug instrad of its numerical id
        type: string
      - in: query
        name: owner_screen_name
        description: The screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: user_id
        description: The id of the user for whom to remove from the list
        type: string
      - in: query
        name: screen_name
        description: The screen name of the user for whom to remove from the list
        type: string
      - in: query
        name: owner_id
        description: The is of the user who wons the list being requested by a slug
        type: string
      responses:
        '200':
          description: ''
  /lists/memberships:
    get:
      description: Returns the lists of the specified user has been added to
      operationId: getListsMemberships
      produces:
      - application/json
      parameters:
      - in: query
        name: user_id
        description: The id of the user for whom to return results for
        type: string
      - in: query
        name: screen_name
        description: The screen name of the user for whom to return results for
        type: string
      - in: query
        name: cursor
        description: Breaks the results into pages
        type: string
      - in: query
        name: filter_to_owned_lists
        description: When set to true, t or 1, will return just lists the authenticating user owns
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Cursor_lists'
          x-identifier: cursorLists
  /lists/subscribers:
    get:
      description: Returns the subscribers of the specified list
      operationId: getListsSubscribers
      produces:
      - application/json
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list by its slug insted of its numerical id
        type: string
      - in: query
        name: owner_screen_name
        description: the screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: owner_id
        description: The user ID of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: cursor
        description: Breaks the results into pages
        type: string
      - in: query
        name: include_entities
        description: Wehn set to either true, t or 1
        type: string
      - in: query
        name: skip_status
        description: When set to either true, t or 1
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Cursor_lists'
          x-identifier: cursorLists
  /lists/subscribers/create:
    post:
      description: Subscribes the authenticated user to the specified list
      operationId: postListsSubscribersCreate
      produces:
      - application/json
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list being requested by a slug
        type: string
      - in: query
        name: owner_screen_name
        description: the screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: owner_id
        description: The user ID of the user who owns the list being requested by a slug
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lists'
          x-identifier: lists
  /lists/subscribers/show:
    get:
      description: Check if the specified user is a subscriber of the specified list
      operationId: getListsSubscribersShow
      produces:
      - application/json
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list being requested by a slug
        type: string
      - in: query
        name: owner_screen_name
        description: The screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: user_id
        description: The id of the user for whom to remove from the list
        type: string
      - in: query
        name: screen_name
        description: The screen name of the user for whom to remove from the list
        type: string
      - in: query
        name: owner_id
        description: The is of the user who wons the list being requested by a slug
        type: string
      - in: query
        name: include_entities
        description: Wehn set to either true, t or 1
        type: string
      - in: query
        name: skip_status
        description: When set to either true, t or 1
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Users'
          x-identifier: users
  /lists/subscribers/destroy:
    get:
      description: Returns list of subscribers destroy
      operationId: getListsSubscribersDestroy
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list being requested by a slug
        type: string
      - in: query
        name: owner_screen_name
        description: the screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: owner_id
        description: The user ID of the user who owns the list being requested by a slug
        type: string
      responses:
        '200':
          description: ''
  /lists/members/create_all:
    get:
      description: Returns lists of members create_all
      operationId: getListsMembersCreateAll
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list being requested by a slug
        type: string
      - in: query
        name: owner_screen_name
        description: the screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: owner_id
        description: The user ID of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: user_id
        description: The id of the user for whom to remove from the list
        type: string
      - in: query
        name: screen_name
        description: The screen name of the user for whom to remove from the list
        type: string
      responses:
        '200':
          description: ''
  /list/members/show:
    get:
      description: Check if the specified user is a member of the specified list
      operationId: getListMembersShow
      produces:
      - application/json
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list being requested by a slug
        type: string
      - in: query
        name: user_id
        description: The id of the user for whom to remove from the list
        type: string
      - in: query
        name: screen_name
        description: The screen name of the user for whom to remove from the list
        type: string
      - in: query
        name: owner_screen_name
        description: The screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: owner_id
        description: The user ID of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: include_entities
        description: Wehn set to either true, t or 1
        type: string
      - in: query
        name: skip_status
        description: When set to either true, t or 1
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Users'
          x-identifier: users
  /list/members:
    get:
      description: Returns the members of the specified list
      operationId: getListMembers
      produces:
      - application/json
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list being requested by a slug
        type: string
      - in: query
        name: owner_screen_name
        description: The screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: owner_id
        description: The user ID of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: include_entities
        description: Wehn set to either true, t or 1
        type: string
      - in: query
        name: skip_status
        description: When set to either true, t or 1
        type: string
      - in: query
        name: cursor
        description: Breaks the results into pages
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Users'
          x-identifier: users
  /list/members/create:
    post:
      description: Returns list of members create
      operationId: postListMembersCreate
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list being requested by a slug
        type: string
      - in: query
        name: screen_name
        description: The screen name of the user for whom to remove from the list
        type: string
      - in: query
        name: owner_screen_name
        description: The screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: owner_id
        description: The user ID of the user who owns the list being requested by a slug
        type: string
      responses:
        '200':
          description: ''
  /lists/destroy:
    post:
      description: Returns list of destroy
      operationId: postListsDestroy
      produces:
      - application/json
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list being requested by a slug
        type: string
      - in: query
        name: owner_screen_name
        description: The screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: owner_id
        description: The user ID of the user who owns the list being requested by a slug
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lists'
          x-identifier: lists
  /lists/update:
    post:
      description: Returns lists of updates
      operationId: postListsUpdate
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list being requested by a slug
        type: string
      - in: query
        name: owner_screen_name
        description: The screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: owner_id
        description: The user ID of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: name
        description: The name for the list
        type: string
      - in: query
        name: mode
        description: Whether your list is public or private
        type: string
      - in: query
        name: description
        description: The description to give the list
        type: string
      responses:
        '200':
          description: ''
  /lists/create:
    post:
      description: Returns list of create
      operationId: postListsCreate
      produces:
      - application/json
      parameters:
      - in: query
        name: name
        description: The name for the list
        type: string
      - in: query
        name: mode
        description: Whether your list is public or private
        type: string
      - in: query
        name: description
        description: The description to give the list
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lists'
          x-identifier: lists
  /lists/show:
    get:
      description: Returns list of show
      operationId: getListsShow
      produces:
      - application/json
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list being requested by a slug
        type: string
      - in: query
        name: owner_screen_name
        description: The screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: owner_id
        description: The user ID of the user who owns the list being requested by a slug
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lists'
          x-identifier: lists
  /lists/subscriptions:
    get:
      description: Returns list of subscriptions
      operationId: getListsSubscriptions
      produces:
      - application/json
      parameters:
      - in: query
        name: screen_name
        description: The screen name of the user
        type: string
      - in: query
        name: user_id
        description: The id of the user for whom to return results for
        type: string
      - in: query
        name: count
        description: The amount of results to return per page
        type: string
      - in: query
        name: cursor
        description: Breaks the results into pages
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Cursor_lists'
          x-identifier: cursorLists
  /list/members/destroy_all:
    get:
      description: Returns lists of destroy all
      operationId: getListMembersDestroyAll
      produces:
      - application/json
      parameters:
      - in: query
        name: list_id
        description: The numerical id of the list
        type: string
      - in: query
        name: slug
        description: You can identify a list being requested by a slug
        type: string
      - in: query
        name: user_id
        description: The id of the user for whom to remove from the list
        type: string
      - in: query
        name: screen_name
        description: The screen name of the user for whom to remove from the list
        type: string
      - in: query
        name: owner_screen_name
        description: The screen name of the user who owns the list being requested by a slug
        type: string
      - in: query
        name: owner_id
        description: The user ID of the user who owns the list being requested by a slug
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Cursor_lists'
          x-identifier: cursorLists
  /direct_messages/sent:
    get:
      description: return 20 most recent direct messages sent
      operationId: getDirectMessagesSent
      produces:
      - application/json
      parameters:
      - in: query
        name: since_id
        type: string
      - in: query
        name: max_id
        type: string
      - in: query
        name: count
        type: string
      - in: query
        name: page
        type: string
      - in: query
        name: include_entities
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Messages'
          x-identifier: ok
  /direct_messages/show:
    get:
      description: returns a single direct message specified by an id
      operationId: getDirectMessagesShow
      produces:
      - application/json
      parameters:
      - in: query
        name: id
        description: ID of direct message
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Messages'
          x-identifier: ok
  /search/tweets:
    get:
      description: returns collection of relevant Tweets matching query
      operationId: getSearchTweets
      produces:
      - application/json
      parameters:
      - in: query
        name: q
        description: URL-encoded search query of 500 characters max
        type: string
      - in: query
        name: geocode
        description: returns tweets by users located within given radius
        type: string
      - in: query
        name: lang
        description: restricts tweets to a given language
        type: string
      - in: query
        name: locale
        description: language of query you are sending
        type: string
      - in: query
        name: result_type
        description: specifies type of search results you prefer
        type: string
      - in: query
        name: count
        description: number of tweets to return
        type: string
      - in: query
        name: until
        description: returns tweets created before given date
        type: string
      - in: query
        name: since_id
        description: return results with ID greater than specified
        type: string
      - in: query
        name: max_id
        description: returns results with an ID less than/equal to specified ID
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      - in: query
        name: callback
        description: response will use the callback with given name
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Tweets'
          x-identifier: ok
  /saved_searches/list:
    get:
      description: Returns the authenticated user's saved search queries
      operationId: getSavedSearchesList
      produces:
      - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Query'
          x-identifier: ok
  /saved_searches/show/{id}:
    get:
      description: Retrieve the information for the saved search represented by the given id
      operationId: getSavedSearchesShowId
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        description: The id of the saved search
        required: true
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Query'
          x-identifier: query
  /saved_searches/create:
    post:
      description: Create a new saved search for the authenticated user
      operationId: postSavedSearchesCreate
      produces:
      - application/json
      parameters:
      - in: query
        name: query
        description: The query of the search the user would like to save
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Query'
          x-identifier: query
  /saved_searches/destroy/{id}:
    post:
      description: Destroy a saved search for the authenticating user
      operationId: postSavedSearchesDestroyId
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        description: The id of the saved search
        required: true
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Query'
          x-identifier: query
  /direct_messages:
    get:
      description: return 20 most recent direct messages sent to user
      operationId: getDirectMessages
      produces:
      - application/json
      parameters:
      - in: query
        name: since_id
        description: return results with ID greater than specified
        type: string
      - in: query
        name: max_id
        description: returns results with an ID less than/equal to specified ID
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      - in: query
        name: skip_status
        description: whether or not to include status
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Messages'
          x-identifier: ok
  /direct_messages/destroy:
    post:
      description: destroys direct messages specified in required ID
      operationId: postDirectMessagesDestroy
      produces:
      - application/json
      parameters:
      - in: query
        name: id
        description: ID of direct message to delete
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Messages'
          x-identifier: messages
  /direct_messages/new:
    post:
      description: sends a new direct message to specified user
      operationId: postDirectMessagesNew
      produces:
      - application/json
      parameters:
      - in: query
        name: user_id
        description: description
        type: string
      - in: query
        name: screen_name
        description: screen name of user receiving message
        type: string
      - in: query
        name: text
        description: text of your direct message
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Messages'
          x-identifier: messages
  /friends/ids:
    get:
      description: returns a cursored collection of user IDs followed by user
      operationId: getFriendsIds
      produces:
      - application/json
      parameters:
      - in: query
        name: user_id
        description: ID of user for whom to return results for
        type: string
      - in: query
        name: screen_name
        description: screen name of user for whom to return results for
        type: string
      - in: query
        name: cursor
        description: causes list of connections to be broken in pages
        type: string
      - in: query
        name: stringify_ids
        description: IDs converted to strings
        type: string
      - in: query
        name: count
        description: number of IDs to attempt retrieval of
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Cursor_ids'
          x-identifier: cursorIds
  /followers/ids:
    get:
      description: returns a cursored collection of user IDs following the user
      operationId: getFollowersIds
      produces:
      - application/json
      parameters:
      - in: query
        name: user_id
        description: ID of user for whom to return results for
        type: string
      - in: query
        name: screen_name
        description: screen name of user for whom to return results for
        type: string
      - in: query
        name: cursor
        description: causes list of connections to be broken in pages
        type: string
      - in: query
        name: stringify_ids
        description: IDs converted to strings
        type: string
      - in: query
        name: count
        description: number of IDs to attempt retrieval of
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Cursor_ids'
          x-identifier: cursorIds
  /friendships/incoming:
    get:
      description: returns collection of IDs of users with pending follow request
      operationId: getFriendshipsIncoming
      produces:
      - application/json
      parameters:
      - in: query
        name: cursor
        description: causes list of connections to be broken in pages
        type: string
      - in: query
        name: stringify_ids
        description: IDs converted to strings
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Cursor_ids'
          x-identifier: cursorIds
  /friendships/outgoing:
    get:
      description: returns collection of IDs of users with pending follow request from the user
      operationId: getFriendshipsOutgoing
      produces:
      - application/json
      parameters:
      - in: query
        name: cursor
        description: causes list of connections to be broken in pages
        type: string
      - in: query
        name: stringify_ids
        description: IDs converted to strings
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Cursor_ids'
          x-identifier: cursorIds
  /friendships/create:
    post:
      description: allows users to follow user sepcified by ID
      operationId: postFriendshipsCreate
      produces:
      - application/json
      parameters:
      - in: query
        name: screen_name
        description: screen name of user for whom to befriend
        type: string
      - in: query
        name: user_id
        description: ID of user for whom to befriend
        type: string
      - in: query
        name: follow
        description: enable notifications for target user
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Users'
          x-identifier: users
  /friendships/destroy:
    post:
      description: allows user to unfollow user psecified by ID
      operationId: postFriendshipsDestroy
      produces:
      - application/json
      parameters:
      - in: query
        name: screen_name
        description: screen name of user for whom to befriend
        type: string
      - in: query
        name: user_id
        description: ID of user for whom to befriend
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Users'
          x-identifier: users
  /friendships/update:
    post:
      description: Allows one to enable or disable settings for specified user
      operationId: postFriendshipsUpdate
      produces:
      - application/json
      parameters:
      - in: query
        name: screen_name
        description: screen name of user for whom to befriend
        type: string
      - in: query
        name: user_id
        description: ID of user for whom to befriend
        type: string
      - in: query
        name: device
        description: enable/disable device notifications for user
        type: string
      - in: query
        name: retweets
        description: enable/disable retweets from target user
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Friendship'
          x-identifier: friendship
  /friendships/show:
    get:
      description: returns detailed info about relationship between two users
      operationId: getFriendshipsShow
      produces:
      - application/json
      parameters:
      - in: query
        name: source_id
        description: user id of subject user
        type: string
      - in: query
        name: source_screen_name
        description: screen_name of subject user
        type: string
      - in: query
        name: target_id
        description: user id of target user
        type: string
      - in: query
        name: target_screen_name
        description: screen name of target user
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Friendship'
          x-identifier: friendship
  /account/settings:
    get:
      summary: returns settings for user
      description: returns settings for user
      operationId: getAccountSettings
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Settings'
          x-identifier: settings
    post:
      summary: updates user's settings
      description: updates user's settings
      operationId: postAccountSettings
      produces:
      - application/json
      parameters:
      - in: query
        name: trend_location_woeid
        description: the Yahoo! Where On Earth ID to user as defaul tend location
        type: string
      - in: query
        name: sleep_time_enabled
        description: enables/disables sleep time, silencing notifications
        type: string
      - in: query
        name: start_sleep_time
        description: the hour that sleep time should begin if enabled
        type: string
      - in: query
        name: end_sleep_time
        description: the hour that sleep time should end if enabled
        type: string
      - in: query
        name: time_zone
        description: timezone dates and times should be displayed in
        type: string
      - in: query
        name: lang
        description: language which Twitter should render in for the user
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Settings'
          x-identifier: settings
  /account/update_delivery_device:
    post:
      summary: sets which device Twitter delivers updates to for user
      description: sets which device Twitter delivers updates to for user
      operationId: postAccountUpdateDeliveryDevice
      produces:
      - application/json
      parameters:
      - in: query
        name: device
        description: must be one of sms, none
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Settings'
          x-identifier: settings
  /account/update_profile:
    post:
      summary: sets values that users ar eable to set under Account tab
      description: sets values that users ar eable to set under Account tab
      operationId: postAccountUpdateProfile
      produces:
      - application/json
      parameters:
      - in: query
        name: name
        description: full name of profile
        type: string
      - in: query
        name: url
        description: url associated with profile
        type: string
      - in: query
        name: location
        description: city or country describing where user of account is.
        type: string
      - in: query
        name: description
        description: a description of user owning account
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      - in: query
        name: skip_status
        description: whether or not to include statuses in response
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Settings'
          x-identifier: settings
  /account/update_profile_background_image:
    post:
      summary: updates user's profile background image
      description: updates user's profile background image
      operationId: postAccountUpdateProfileBackgroundImage
      produces:
      - application/json
      parameters:
      - in: query
        name: tile
        description: whether or not to tile background image
        type: string
      - in: query
        name: use
        description: display background image or not
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      - in: query
        name: skip_status
        description: whether or not to include status in returned user objects
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Settings'
          x-identifier: settings
  /account/update_profile_colors:
    post:
      summary: sets one or more hex values that controls color scheme
      description: sets one or more hex values that controls color scheme
      operationId: postAccountUpdateProfileColors
      produces:
      - application/json
      parameters:
      - in: query
        name: profile_background_color
        description: profile background color
        type: string
      - in: query
        name: profile_link_color
        description: profile link color
        type: string
      - in: query
        name: profile_sidebar_border_color
        description: profile sidebar's border color
        type: string
      - in: query
        name: profile_sidebar_fill_color
        description: profile's sidebar background color
        type: string
      - in: query
        name: profile_text_color
        description: profile text color
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      - in: query
        name: skip_status
        description: whether or not to include statuses
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Settings'
          x-identifier: settings
  /account/update_profile_image:
    post:
      summary: updates user's profile image
      description: updates user's profile image
      operationId: postAccountUpdateProfileImage
      produces:
      - application/json
      parameters:
      - in: query
        name: skip_status
        description: whether or not to include statuses
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Settings'
          x-identifier: settings
  /blocks/list:
    get:
      summary: disallows retweets and device notifications from a user
      description: disallows retweets and device notifications from a user
      operationId: getBlocksList
      produces:
      - application/json
      parameters:
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      - in: query
        name: skip_status
        description: whether or not to include statuses in response
        type: string
      - in: query
        name: cursor
        description: breaks block of user to be broken up into pages
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Cursor_users'
          x-identifier: cursorUsers
  /blocks/ids:
    get:
      summary: returns array of numeric user ids of blocked users
      description: returns array of numeric user ids of blocked users
      operationId: getBlocksIds
      produces:
      - application/json
      parameters:
      - in: query
        name: stringify_ids
        description: returns array of numeric IDs as string IDs
        type: string
      - in: query
        name: cursor
        description: breaks up block of user IDs into pages
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Cursor_users'
          x-identifier: cursorUsers
  /blocks/create:
    post:
      summary: blocks the specified user
      description: blocks the specified user
      operationId: postBlocksCreate
      produces:
      - application/json
      parameters:
      - in: query
        name: screen_name
        description: screen name of user to be blocked
        type: string
      - in: query
        name: user_id
        description: ID of user to be blocked
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      - in: query
        name: skip_status
        description: whether or not to skip statuses
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Users'
          x-identifier: users
  /blocks/destroy:
    post:
      summary: un-blocks the specified user
      description: un-blocks the specified user
      operationId: postBlocksDestroy
      produces:
      - application/json
      parameters:
      - in: query
        name: screen_name
        description: screen name of user to be un-blocked
        type: string
      - in: query
        name: user_id
        description: ID of user to be un-blocked
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      - in: query
        name: skip_status
        description: whether or not to skip statuses
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Users'
          x-identifier: users
  /users/lookup:
    get:
      summary: returns fully-hydrated user objects up to 100
      description: returns fully-hydrated user objects up to 100
      operationId: getUsersLookup
      produces:
      - application/json
      parameters:
      - in: query
        name: screen_name
        description: screen name of user to lookup
        type: string
      - in: query
        name: user_id
        description: ID of user to lookup
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Users'
          x-identifier: ok
  /users/show:
    get:
      summary: returns a variety of info about specified user
      description: returns a variety of info about specified user
      operationId: getUsersShow
      produces:
      - application/json
      parameters:
      - in: query
        name: screen_name
        description: screen name of user to be shown
        type: string
      - in: query
        name: user_id
        description: ID of user to be shown
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Users'
          x-identifier: users
  /users/search:
    get:
      summary: simple relevance-based user search
      description: simple relevance-based user search
      operationId: getUsersSearch
      produces:
      - application/json
      parameters:
      - in: query
        name: q
        description: the search query to run against people search
        type: string
      - in: query
        name: page
        description: specifies the page of results to receive
        type: string
      - in: query
        name: count
        description: number of people to return per page
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Users'
          x-identifier: ok
  /users/contributees:
    get:
      summary: collection of users specified user can contribute to
      description: collection of users specified user can contribute to
      operationId: getUsersContributees
      produces:
      - application/json
      parameters:
      - in: query
        name: screen_name
        description: screen name of user that is contributed to
        type: string
      - in: query
        name: user_id
        description: ID of user to that is contributed to
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      - in: query
        name: skip_status
        description: whether or not to skip statuses
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Users'
          x-identifier: ok
  /users/contributors:
    get:
      summary: collection of users that can contribute to specified account
      description: collection of users that can contribute to specified account
      operationId: getUsersContributors
      produces:
      - application/json
      parameters:
      - in: query
        name: screen_name
        description: screen name of user contributing
        type: string
      - in: query
        name: user_id
        description: ID of user contributing
        type: string
      - in: query
        name: include_entities
        description: whether or not to include entities
        type: string
      - in: query
        name: skip_status
        description: whether or not to skip statuses
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Users'
          x-identifier: ok
  /geo/id/{place_id}:
    get:
      description: Returns all the information about a know place
      operationId: getGeoIdPlaceId
      produces:
      - application/json
      parameters:
      - in: path
        name: place_id
        description: A place in the world
        required: true
        type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Places'
          x-identifier: ok
  /geo/reverse_geoncode:
    get:
      description: Given a latitude and a longitude, searches for up to 20 places that can be used as a place_id when updatting a status
      operationId: getGeoReverseGeoncode
      produces:
      - application/json
      parameters:
      - in: query
        name: lat
        description: The latitude to search around
        type: string
      - in: query
        name: long
        description: The longtitude to search around
        type: string
      - in: query
        name: accuracy
        description: A hint on region in which to search
        type: string
      - in: query
        name: granularity
        description: This is the minimal granularity of place types to return
        type: string
      - in: query
        name: max_results
        description: A hint as to the number of results to return
        type: string
      - in: query
        name: callback
        description: If supplied, the responses will use the JSON format with a callback of the given name
        type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Places'
          x-identifier: ok
  /geo/search:
    get:
      description: Search for places that can be attached to a statuses/updates
      operationId: getGeoSearch
      produces:
      - application/json
      parameters:
      - in: query
        name: lat
        description: The latitude to search around
        type: string
      - in: query
        name: long
        description: The longtitude to search around
        type: string
      - in: query
        name: query
        description: Free-form text to match against while executing a geo-based query
        type: string
      - in: query
        name: ip
        description: An Ip address
        type: string
      - in: query
        name: accuracy
        description: A hint on region in which to search
        type: string
      - in: query
        name: granularity
        description: This is the minimal granularity of place types to return
        type: string
      - in: query
        name: contained_within
        description: This is the place_id which you would like to restrict the search results to
        type: string
      - in: query
        name: attribute:street_address
        description: This parameter searches for places which have this givven street address
        type: string
        x-identifier: attributeStreetAddress
      - in: query
        name: callback
        description: If supplied, the responses will use the JSON format with a callback of the given name
        type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Places'
          x-identifier: ok
  /geo/similar_places:
    get:
      description: Locates places near the given coordinates which are similar in name
      operationId: getGeoSimilarPlaces
      produces:
      - application/json
      parameters:
      - in: query
        name: lat
        description: The latitude to search around
        type: string
      - in: query
        name: long
        description: The longtitude to search around
        type: string
      - in: query
        name: name
        description: The name a place is known as
        type: string
      - in: query
        name: contained_within
        description: This is the place_id which you would like to restrict the search results to
        type: string
      - in: query
        name: attribute:street_address
        description: This parameter searches for places which have this givven street address
        type: string
        x-identifier: attributeStreetAddress
      - in: query
        name: callback
        description: If supplied, the responses will use the JSON format with a callback of the given name
        type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Places'
          x-identifier: ok
  /geo/places:
    get:
      description: Create a new place object at the given latitude and logitude
      operationId: getGeoPlaces
      produces:
      - application/json
      parameters:
      - in: query
        name: lat
        description: The latitude to search around
        type: string
      - in: query
        name: long
        description: The longtitude to search around
        type: string
      - in: query
        name: name
        description: The name a place is known as
        type: string
      - in: query
        name: token
        description: The token found in the response from geo/similar_places
        type: string
      - in: query
        name: contained_within
        description: This is the place_id which you would like to restrict the search results to
        type: string
      - in: query
        name: attribute:street_address
        description: This parameter searches for places which have this givven street address
        type: string
        x-identifier: attributeStreetAddress
      - in: query
        name: callback
        description: If supplied, the responses will use the JSON format with a callback of the given name
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Places'
          x-identifier: places
  /trends/place:
    get:
      description: Returns the top 10 trending topics for a specific WOEID
      operationId: getTrendsPlace
      produces:
      - application/json
      parameters:
      - in: query
        name: id
        description: The yahoo where on earch id
        type: string
      - in: query
        name: exclude
        description: Setting this equal to hashtages will remove all hashtages from the trends list
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TrendInfo'
          x-identifier: trendInfo
  /trends/available:
    get:
      description: Returns the availability
      operationId: getTrendsAvailable
      produces:
      - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
          x-identifier: ok
  /trends/closest:
    get:
      description: Returns the location that Twitter has trending topic information for
      operationId: getTrendsClosest
      produces:
      - application/json
      parameters:
      - in: query
        name: lat
        description: If provided with a long parameter the available trend locations wil be stored by distance
        type: string
      - in: query
        name: long
        description: If provided with a lat parameters the available trend locations will be sorted by distance
        type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
          x-identifier: ok
  /users/report_spam:
    post:
      description: Returna users report spam
      operationId: postUsersReportSpam
      produces:
      - application/json
      parameters:
      - in: query
        name: screen_name
        description: The ID or screen_name of the user you want to report as a spammer
        type: string
      - in: query
        name: user_id
        description: The ID of the user you want to report as a spammer
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Users'
          x-identifier: users
  /help/configuration:
    get:
      description: Returns the current configuration used by Twitter including twitter.com slugs which are not usernames
      operationId: getHelpConfiguration
      produces:
      - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Help_Config'
          x-identifier: helpConfig
  /help/languages:
    get:
      description: Returns the list of languages supported by Twitter along with the language code supported by Twitter
      operationId: getHelpLanguages
      produces:
      - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Help_Language'
          x-identifier: ok
  /help/privacy:
    get:
      description: Returns Twitter's privacy policy
      operationId: getHelpPrivacy
      produces:
      - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Help_Privacy'
          x-identifier: helpPrivacy
  /help/tos:
    get:
      description: Returns the Twitter Terms of Service
      operationId: getHelpTos
      produces:
      - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Help_Tos'
          x-identifier: helpTos
  /application/rate_limit_status:
    get:
      description: Returns the current rate limits for methods belonging to the specified resource families
      operationId: getApplicationRateLimitStatus
      parameters:
      - in: query
        name: resources
        description: A comma-separated list of resource families you want to know the current rate limit disposition for
        type: string
      responses:
        '200':
          description: ''
definitions:
  Tweets:
    type: object
    properties:
      contributors:
        type: array
        items:
          $ref: '#/definitions/Contributors'
      coordinates:
        $ref: '#/definitions/Coordinates'
      created_at:
        type: string
      current_user_retweet:
        $ref: '#/definitions/Tweets'
      entities:
        $ref: '#/definitions/Entities'
      favorite_count:
        type: integer
        format: int32
      favorited:
        type: boolean
      filter_level:
        type: string
      id:
        type: integer
        format: int32
      id_str:
        type: string
      in_reply_to_screen_name:
        type: string
      in_reply_to_status_id:
        type: integer
        format: int32
      in_reply_to_status_id_str:
        type: string
      in_reply_to_user_id:
        type: integer
        format: int32
      in_reply_to_user_id_str:
        type: string
      lang:
        type: string
      place:
        $ref: '#/definitions/Places'
      possibly_sensitive:
        type: boolean
      quoted_status_id:
        type: integer
        format: int32
      quoted_status_id_str:
        type: string
      quoted_status:
        $ref: '#/definitions/Tweets'
      scopes:
        type: object
        additionalProperties:
          type: object
      retweet_count:
        type: integer
        format: int32
      retweeted:
        type: boolean
      retweeted_status:
        $ref: '#/definitions/Tweets'
      source:
        type: string
      text:
        type: string
      truncated:
        type: string
      user:
        $ref: '#/definitions/Users'
      withheld_copyright:
        type: boolean
      withheld_countries:
        type: array
        items:
          type: string
      withheld_scope:
        type: string
  Lists:
    type: object
    properties:
      created_at:
        type: string
      slug:
        type: string
      name:
        type: string
      description:
        type: string
      mode:
        type: string
      following:
        type: boolean
      user:
        $ref: '#/definitions/Users'
      member_count:
        type: integer
        format: int32
      id_str:
        type: string
      subscriber_count:
        type: integer
        format: int32
      id:
        type: integer
        format: int32
      uri:
        type: string
  Cursor_lists:
    type: object
    properties:
      previous_cursor:
        type: integer
        format: int32
      lists:
        type: array
        items:
          $ref: '#/definitions/Lists'
      previous_cursor_str:
        type: string
      next_cursor:
        type: integer
        format: int32
      next_cursor_str:
        type: string
  Users:
    type: object
    properties:
      contributors_enabled:
        type: boolean
      created_at:
        type: string
      default_profile:
        type: boolean
      default_profile_image:
        type: boolean
      description:
        type: string
      entities:
        $ref: '#/definitions/Entities'
      favorites_count:
        type: integer
        format: int32
      follow_request_sent:
        type: boolean
      following:
        type: boolean
      followers_count:
        type: integer
        format: int32
      friends_count:
        type: integer
        format: int32
      geo_enabled:
        type: boolean
      id:
        type: integer
        format: int32
      id_str:
        type: string
      is_translator:
        type: boolean
      lang:
        type: string
      listed_count:
        type: integer
        format: int32
      location:
        type: string
      name:
        type: string
      notifications:
        type: boolean
      profile_background_color:
        type: string
      profile_background_image_url:
        type: string
      profile_background_image_url_https:
        type: string
      profile_background_tile:
        type: string
      profile_banner_url:
        type: string
      profile_image_url:
        type: string
      profile_image_url_https:
        type: string
      profile_link_color:
        type: string
      profile_sidebar_border_color:
        type: string
      profile_sidebar_fill_color:
        type: string
      profile_text_color:
        type: string
      profile_use_background_image:
        type: boolean
      protected:
        type: boolean
      screen_name:
        type: string
      show_all_inline_media:
        type: boolean
      status:
        $ref: '#/definitions/Tweets'
      statuses_count:
        type: integer
        format: int32
      time_zone:
        type: string
      url:
        type: string
      utc_offset:
        type: integer
        format: int32
      verified:
        type: boolean
      withheld_in_countries:
        type: string
      withheld_scope:
        type: string
  Messages:
    type: object
    properties:
      created_at:
        type: string
      entities:
        $ref: '#/definitions/Entities'
      id:
        type: integer
        format: int32
      id_string:
        type: string
      recipient:
        $ref: '#/definitions/Users'
      recipient_id:
        type: integer
        format: int32
      recipient_screen_name:
        type: string
      sender:
        $ref: '#/definitions/Users'
      sender_id:
        type: integer
        format: int32
      sender_screen_name:
        type: string
      text:
        type: string
  Query:
    type: object
    properties:
      created_at:
        type: string
      id:
        type: integer
        format: int32
      id_str:
        type: string
      name:
        type: string
      position:
        type: string
      query:
        type: string
  Cursor_ids:
    type: object
    properties:
      previous_cursor:
        type: integer
        format: int32
      users:
        type: array
        items:
          type: integer
          format: int32
      previous_cursor_str:
        type: string
      next_cursor:
        type: integer
        format: int32
      next_cursor_str:
        type: string
  Friendship:
    type: object
    properties:
      relationship:
        $ref: '#/definitions/Targets'
      source:
        $ref: '#/definitions/Source'
  Settings:
    type: object
    properties:
      sleep_time:
        $ref: '#/definitions/Sleep'
      use_cookie_personalization:
        type: boolean
      trend_location:
        type: array
        items:
          $ref: '#/definitions/Location'
      language:
        type: string
      discoverable_by_email:
        type: boolean
      always_use_https:
        type: boolean
      protected:
        type: boolean
      geo_enabled:
        type: boolean
      show_all_inline_media:
        type: boolean
      screen_name:
        type: string
  Cursor_users:
    type: object
    properties:
      previous_cursor:
        type: integer
        format: int32
      users:
        type: array
        items:
          $ref: '#/definitions/Users'
      previous_cursor_str:
        type: string
      next_cursor:
        type: integer
        format: int32
      next_cursor_str:
        type: string
  Places:
    type: object
    properties:
      attributes:
        type: object
        additionalProperties:
          type: object
      bounding_box:
        $ref: '#/definitions/Bounding_box'
      country:
        type: string
      country_code:
        type: string
      full_name:
        type: string
      id:
        type: string
      name:
        type: string
      place_type:
        type: string
      url:
        type: string
  TrendInfo:
    type: object
    properties:
      as_of:
        type: string
      created_at:
        type: string
      locations:
        type: array
        items:
          $ref: '#/definitions/Location'
      trends:
        type: array
        items:
          $ref: '#/definitions/Trends'
  Location:
    type: object
    properties:
      name:
        type: string
      placeType:
        $ref: '#/definitions/PlaceType'
      woeid:
        type: integer
        format: int32
      country:
        type: string
      url:
        type: string
      countryCode:
        type: string
      parentid:
        type: integer
        format: int32
  Help_Config:
    type: object
    properties:
      dm_text_character_limit:
        type: integer
        format: int32
      characters_reserved_per_media:
        type: integer
        format: int32
      max_media_per_upload:
        type: integer
        format: int32
      non_username_paths:
        type: array
        items:
          type: string
      photo_size_limit:
        type: integer
        format: int32
      photo_sizes:
        $ref: '#/definitions/Sizes'
  Help_Language:
    type: object
    properties:
      code:
        type: string
      status:
        type: string
      name:
        type: string
  Help_Privacy:
    type: object
    properties:
      privacy:
        type: string
  Help_Tos:
    type: object
    properties:
      Tos:
        type: string
  Contributors:
    type: object
    properties:
      id:
        type: integer
        format: int32
      id_str:
        type: string
      screen_name:
        type: string
  Coordinates:
    type: object
    properties:
      coordinates:
        type: array
        items:
          type: number
          format: double
      type:
        type: string
  Entities:
    type: object
    properties:
      hashtags:
        type: array
        items:
          $ref: '#/definitions/Hashtags'
      media:
        type: array
        items:
          $ref: '#/definitions/Media'
      urls:
        type: array
        items:
          $ref: '#/definitions/URL'
      user_mentions:
        type: array
        items:
          $ref: '#/definitions/User_Mention'
  Targets:
    type: object
    properties:
      target:
        $ref: '#/definitions/Target'
  Source:
    type: object
    properties:
      can_dm:
        type: boolean
      blocking:
        type: boolean
      id_str:
        type: boolean
      all_replies:
        type: boolean
      want_retweets:
        type: boolean
      id:
        type: integer
        format: int32
      marked_spam:
        type: boolean
      followed_by:
        type: boolean
      notifications_enable:
        type: boolean
      screen_name:
        type: string
      following:
        type: boolean
  Sleep:
    type: object
    properties:
      end_time:
        type: string
      enabled:
        type: boolean
      start_time:
        type: string
  Bounding_box:
    type: object
    properties:
      type:
        type: string
  Trends:
    type: object
    properties:
      events:
        type: string
      name:
        type: string
      promoted_content:
        type: string
      query:
        type: string
      url:
        type: string
  PlaceType:
    type: object
    properties:
      name:
        type: string
      code:
        type: integer
        format: int32
  Sizes:
    type: object
    properties:
      thumb:
        $ref: '#/definitions/Size'
      large:
        $ref: '#/definitions/Size'
      medium:
        $ref: '#/definitions/Size'
      small:
        $ref: '#/definitions/Size'
  Hashtags:
    type: object
    properties:
      indices:
        type: array
        items:
          type: integer
          format: int32
      text:
        type: string
  Media:
    type: object
    properties:
      display_url:
        type: string
      expanded_url:
        type: string
      id:
        type: integer
        format: int32
      id_str:
        type: string
      indices:
        type: array
        items:
          type: integer
          format: int32
      media_url:
        type: string
      media_url_https:
        type: string
      sizes:
        $ref: '#/definitions/Sizes'
      source_status_id:
        type: integer
        format: int32
      source_status_id_str:
        type: integer
        format: int32
      type:
        type: string
      url:
        type: string
  URL:
    type: object
    properties:
      display_url:
        type: string
      expanded_url:
        type: string
      indices:
        type: string
      url:
        type: string
  User_Mention:
    type: object
    properties:
      id:
        type: integer
        format: int32
      id_str:
        type: string
      indices:
        type: array
        items:
          type: integer
          format: int32
      name:
        type: string
      screen_name:
        type: string
  Target:
    type: object
    properties:
      id_str:
        type: string
      id:
        type: integer
        format: int32
      followed_by:
        type: boolean
      screen_name:
        type: string
      following:
        type: boolean
  Size:
    type: object
    properties:
      h:
        type: integer
        format: int32
      resize:
        type: string
      w:
        type: integer
        format: int32
