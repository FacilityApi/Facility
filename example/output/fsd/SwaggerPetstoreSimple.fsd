// DO NOT EDIT: generated by fsdgenfsd

/// Swagger Petstore (Simple)
[info(version: 1.0.0)]
[http(url: "http://petstore.swagger.io/api")]
service SwaggerPetstoreSimple
{
	[http(method: GET, path: "/pets")]
	method findPets
	{
		/// tags to filter by
		tags: string;

		/// maximum number of results to return
		limit: int32;
	}:
	{
		/// pet response
		[http(from: body, code: 200)]
		ok: pet[];
	}

	[http(method: POST, path: "/pets")]
	method addPet
	{
		/// Pet to add to the store
		[http(from: body)]
		body: newPet;
	}:
	{
		/// pet response
		[http(from: body, code: 200)]
		pet: pet;
	}

	[http(method: GET, path: "/pets/{id}")]
	method findPetById
	{
		/// ID of pet to fetch
		id: int64;
	}:
	{
		/// pet response
		[http(from: body, code: 200)]
		pet: pet;
	}

	[http(method: DELETE, path: "/pets/{id}")]
	method deletePet
	{
		/// ID of pet to delete
		id: int64;
	}:
	{
		/// pet deleted
		[http(from: body, code: 204)]
		noContent: boolean;
	}

	data pet
	{
		id: int64;

		name: string;

		tag: string;
	}

	data newPet
	{
		id: int64;

		name: string;

		tag: string;
	}

	data errorModel
	{
		code: int32;

		message: string;
	}
}

# SwaggerPetstoreSimple

A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification

# findPets

Returns all pets from the system that the user has access to

# addPet

Creates a new pet in the store.  Duplicates are allowed

# findPetById

Returns a user based on a single ID, if the user does not have access to the pet

# deletePet

deletes a single pet based on the ID supplied
